name: deploy-production
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  push:
    branches:
      - main
concurrency:
  group: deploy-production-workflows
  cancel-in-progress: false
jobs:
  deploy-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            src
            public
      - id: cache-npm-global
        uses: actions/cache@v4
        with:
          path: /usr/local/lib/node_modules
          key: ${{ runner.os }}-npm-global
      - if: ${{ steps.cache-npm-global.outputs.cache-hit != 'true' }}
        run: npm install -g vercel@latest
      - run: vercel --prod --yes --token=${{ secrets.VERCEL_TOKEN }}
  run-migrations:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          sparse-checkout: |
            migrations
      - uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-cache
      - run: npm install -g vercel@latest
      - run: vercel env pull --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - id: cache-direnv
        uses: actions/cache@v4
        with:
          path: /opt/pipx_bin/direnv
          key: ${{ runner.os }}-direnv
      - if: ${{ steps.cache-direnv.outputs.cache-hit != 'true' }}
        run: curl -sfL https://direnv.net/install.sh | bash
      - run: |
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          direnv allow .
          direnv export gha > "$GITHUB_ENV"
      - id: cache-atlas
        uses: actions/cache@v4
        with:
          path: /usr/local/bin/atlas
          key: ${{ runner.os }}-atlas
      - if: ${{ steps.cache-atlas.outputs.cache-hit != 'true' }}
        run: curl -sSf https://atlasgo.sh | sh
      - run: atlas migrate apply --url $DATABASE_URL --revisions-schema "public" --dir "file://migrations"
